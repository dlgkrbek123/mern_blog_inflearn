npm install express cors dotenv hpp helmet

express : 웹 서버 프레잌워크
cors    : cors를 해결해 줌
dotenv  : 환경변수를 주입하기 위한 라이브러리
hpp     : router.query로 인한 보안 취약점을 해결
helemt  : header를 통한 보안 이슈를 해결


npm install mongoose moment

mongoose : 몽고db를 js만으로 처리하게 해줌
moment   : 시간 관련 라이브러리 ( utc를 통일 )


node는 commonJS, 프론트는 es6 모듈을 사용
이를 통일하기 위해 바벨을 사용하자

npm install @babel/cli @babel/core @babel/node @babel/preset-env babel-loader @babel/polyfill -D

@babel/cli  : cli에서 babel을 사용하게 해줌  
@babel/core : es6 => es5

polyfill : 충전솜이었구나 ㅎㅎ. 환경에 부족한 js기능을 주입


npm install morgan nodemon -D


--------------------------------------------------

프론트 서버를 따로 두지 않고
백엔드에서 정적 파일로 제공하자

--------------------------------------------------

mongodb atlas 클러스터 생성

network access로 ip 추가
connect로 접속 방법을 설정 => your application


--------------------------------------------------

npm install bcryptjs jsonwebtoken

재로그인시 토큰 값이 달라진다.

--------------------------------------------------

npx 설치여부 보고 라이브러리를 다운함

npm install redux react-redux redux-saga react-router-dom connected-react-router bootstrap reactstrap dotenv

npm install node-sass sass-loader


--------------------------------------------------

cra는 eject해야 웹팩설정 수정가능
eject이후에 돌아갈 수 없음


웹팩은 모든 자원을 하나의 번들파일로 합침
spa는 번들러가 필요하다.

output : 번들 결과물의 위치
loader : 서로 다른 자원을 읽어들임
plugin : 자원에 처리를 해주는 모듈




npm run eject
npx create-react-app ckeditor5-react-example && cd ckeditor5-react-example